{"version":3,"sources":["styles.ts","NewItemForm.tsx","utils/useFocus.ts","AddNewItem.tsx","utils/findItemIndexById.ts","AppStateContext.tsx","utils/moveItem.ts","utils/useItemDrag.ts","utils/isHidden.ts","Card.tsx","TrashIcon.tsx","Column.tsx","CustomDragLayer.tsx","App.tsx","index.tsx"],"names":["AppContainer","styled","div","DragPreviewContainer","props","isPreview","undefined","isHidden","ColumnContainer","ColumnTitle","CardContainer","AddItemButton","button","NewItemFormContainer","NewItemButton","NewItemInput","input","CustomDragLayerContainer","trashAnimation","keyframes","trashCapAnimation","Svg","svg","NewItemForm","onAdd","useState","text","setText","inputRef","ref","useRef","useEffect","current","focus","useFocus","value","onChange","e","target","onClick","AddNewItem","showForm","setShowForm","toggleButtonText","dark","findItemIndexById","items","id","findIndex","item","appData","draggedItem","lists","tasks","appStateReducer","state","action","type","payload","length","nanoid","targetLaneIndex","listId","newState","push","dragIndex","hoverIndex","array","from","to","startIndex","splice","moveItem","sourceColumn","targetColumn","sourceLaneIndex","newLists","filter","list","AppStateContext","createContext","AppStateProvider","children","useReducer","dispatch","Provider","useAppState","useContext","useItemDrag","useDrag","begin","end","drag","preview","getEmptyImage","captureDraggingState","itemType","Boolean","Card","index","columnId","useDrop","accept","hover","drop","TrashIcon","xmlns","viewBox","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","className","strokeMiterlimit","Column","map","task","i","CustomDragLayer","useDragLayer","monitor","getItem","isDragging","currentOffset","getClientOffset","style","getItemStyles","display","x","y","transform","WebkitTransform","App","ReactDOM","render","StrictMode","DndProvider","backend","Backend","document","getElementById"],"mappings":"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","file":"static/js/main.3fd3c152.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\ninterface AddItemButtonProps {\n  dark?: boolean;\n}\ninterface DragPreviewContainerProps {\n  isHidden?: boolean;\n  isPreview?: boolean;\n}\n\nexport const AppContainer = styled.div`\n  align-items: flex-start;\n  background-color: #94b5c2;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  padding: 20px;\n  width: 100%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n  }\n`;\n\nexport const DragPreviewContainer = styled.div<DragPreviewContainerProps>`\n  transform: ${(props) => (props.isPreview ? \"rotate(5deg)\" : undefined)};\n  opacity: ${(props) => (props.isHidden ? 0 : 1)};\n`;\n\nexport const ColumnContainer = styled(DragPreviewContainer)`\n  background-color: #ebecf0;\n  width: 300px;\n  min-height: 40px;\n  margin-right: 20px;\n  border-radius: 3px;\n  padding: 8px 8px;\n  flex-grow: 0;\n  box-shadow: black 2px 2px 5px 0px;\n`;\n\nexport const ColumnTitle = styled.div`\n  padding: 6px 16px 12px;\n  font-weight: bold;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CardContainer = styled(DragPreviewContainer)`\n  background-color: #fff;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n  padding: 0.5rem 1rem;\n  max-width: 300px;\n  border-radius: 3px;\n`;\n\nexport const AddItemButton = styled.button<AddItemButtonProps>`\n  background-color: #eadcc1;\n  border-radius: 3px;\n  border: none;\n  color: #000;\n  cursor: pointer;\n  max-width: 300px;\n  padding: 10px 12px;\n  text-align: left;\n  transition: background 85ms ease-in;\n  width: 100%;\n  &:hover {\n    background-color: #e8c78b;\n  }\n`;\n\nexport const NewItemFormContainer = styled.div`\n  max-width: 300px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: flex-start;\n`;\n\nexport const NewItemButton = styled.button`\n  background-color: #423c6d;\n  border-radius: 3px;\n  border: none;\n  box-shadow: none;\n  color: #fff;\n  padding: 6px 12px;\n  text-align: center;\n  transition: background 85ms ease-in;\n  &:hover {\n    background-color: #2b236b;\n  }\n`;\n\nexport const NewItemInput = styled.input`\n  border-radius: 3px;\n  border: none;\n  box-shadow: #091e4240 0px 1px 0px 0px;\n  margin-bottom: 0.5rem;\n  padding: 0.5rem 1rem;\n  width: 100%;\n`;\n\nexport const CustomDragLayerContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  left: 0;\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  z-index: 100;\n`;\nconst trashAnimation = keyframes`\n  0%,50%,100%{\n    transform:rotate(0deg)\n    \n  }\n  25%{\n    transform:rotate(15deg)\n  }\n  75%{\n    transform:rotate(-15deg)\n  }\n`;\nconst trashCapAnimation = keyframes`\n  0%,100%{\n    transform:translateY(0)\n  }\n  1%,99%{\n    transform:translateY(-40px)\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 25px;\n  transition: color 85ms;\n  &:hover {\n    color: #efaeae;\n    path:nth-child(3) {\n      animation: ${trashCapAnimation} 200ms linear;\n    }\n    path:nth-child(4) {\n      animation: ${trashCapAnimation} 200ms linear;\n    }\n\n    animation: ${trashAnimation} 200ms linear;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { NewItemFormContainer, NewItemButton, NewItemInput } from \"./styles\";\nimport { useFocus } from \"./utils/useFocus\";\ninterface NewItemFormProps {\n  onAdd(text: string): void;\n}\n\nexport const NewItemForm = ({ onAdd }: NewItemFormProps) => {\n  const [text, setText] = useState(\"\");\n  const inputRef = useFocus();\n  return (\n    <NewItemFormContainer>\n      <NewItemInput ref={inputRef} value={text} onChange={(e) => setText(e.target.value)} />\n      <NewItemButton onClick={() => onAdd(text)}>Create</NewItemButton>\n    </NewItemFormContainer>\n  );\n};\n","import { useRef, useEffect } from \"react\";\n\nexport const useFocus = () => {\n  const ref = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    ref.current?.focus();\n  }, []);\n  return ref;\n};\n","import React, { useState } from \"react\";\nimport { AddItemButton } from \"./styles\";\nimport { NewItemForm } from \"./NewItemForm\";\ninterface AddNewItemProps {\n  onAdd(text: string): void;\n  toggleButtonText: string;\n  dark?: boolean;\n}\n\nexport const AddNewItem = (props: AddNewItemProps) => {\n  const [showForm, setShowForm] = useState(false);\n  const { onAdd, toggleButtonText, dark } = props;\n  if (showForm) {\n    return (\n      <NewItemForm\n        onAdd={(text) => {\n          onAdd(text);\n          setShowForm(false);\n        }}\n      />\n    );\n  }\n  return (\n    <AddItemButton dark={dark} onClick={() => setShowForm(true)}>\n      {toggleButtonText}\n    </AddItemButton>\n  );\n};\n","interface Item {\n  id: string;\n}\n\nexport const findItemIndexById = <T extends Item>(items: T[], id: string) =>\n  items.findIndex((item: T) => item.id === id);\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { findItemIndexById } from \"./utils/findItemIndexById\";\nimport { moveItem } from \"./utils/moveItem\";\nimport { DragItem } from \"./DragItem\";\ninterface Task {\n  id: string;\n  text: string;\n}\n\ninterface List {\n  id: string;\n  text: string;\n  tasks: Task[];\n}\n\nexport interface AppState {\n  lists: List[];\n  draggedItem: DragItem | undefined;\n}\n\ninterface AppStateContextProps {\n  state: AppState;\n  dispatch: React.Dispatch<Action>;\n}\n\ntype Action =\n  | { type: \"ADD_LIST\"; payload: string }\n  | {\n      type: \"ADD_TASK\";\n      payload: { text: string; listId: string };\n    }\n  | { type: \"MOVE_LIST\"; payload: { dragIndex: number; hoverIndex: number } }\n  | { type: \"SET_DRAGGED_ITEM\"; payload: DragItem | undefined }\n  | {\n      type: \"MOVE_TASK\";\n      payload: {\n        dragIndex: number;\n        hoverIndex: number;\n        sourceColumn: string;\n        targetColumn: string;\n      };\n    }\n  | { type: \"DELETE_LIST\"; payload: { listId: string } };\n\nconst appData: AppState = {\n  draggedItem: undefined,\n  lists: [\n    {\n      id: \"0\",\n      text: \"To Do\",\n      tasks: [{ id: \"c0\", text: \"Generate app scaffold\" }],\n    },\n    {\n      id: \"1\",\n      text: \"In Progress\",\n      tasks: [{ id: \"c2\", text: \"Learn Typescript\" }],\n    },\n    {\n      id: \"2\",\n      text: \"Done\",\n      tasks: [{ id: \"c3\", text: \"Begin to use static typing\" }],\n    },\n  ],\n};\n\nconst appStateReducer = (state: AppState, action: Action) => {\n  switch (action.type) {\n    case \"ADD_LIST\": {\n      if (action.payload.length === 0) {\n        return { ...state };\n      }\n      return {\n        ...state,\n        lists: [...state.lists, { id: nanoid(), text: action.payload, tasks: [] }],\n      };\n    }\n    case \"ADD_TASK\": {\n      if (action.payload.text.length === 0) {\n        return { ...state };\n      }\n      const targetLaneIndex = findItemIndexById(state.lists, action.payload.listId);\n      const newState = { ...state };\n      newState.lists[targetLaneIndex].tasks.push({\n        id: nanoid(),\n        text: action.payload.text,\n      });\n      return newState;\n    }\n    case \"MOVE_LIST\": {\n      const { dragIndex, hoverIndex } = action.payload;\n      state.lists = moveItem(state.lists, dragIndex, hoverIndex);\n      return { ...state };\n    }\n    case \"MOVE_TASK\": {\n      const { dragIndex, hoverIndex, sourceColumn, targetColumn } = action.payload;\n      const sourceLaneIndex = findItemIndexById(state.lists, sourceColumn);\n      const targetLaneIndex = findItemIndexById(state.lists, targetColumn);\n      const item = state.lists[sourceLaneIndex].tasks.splice(dragIndex, 1)[0];\n      state.lists[targetLaneIndex].tasks.splice(hoverIndex, 0, item);\n      return { ...state };\n    }\n    case \"SET_DRAGGED_ITEM\": {\n      return { ...state, draggedItem: action.payload };\n    }\n    case \"DELETE_LIST\": {\n      const newLists = state.lists.filter((list) => list.id !== action.payload.listId);\n      return { ...state, lists: newLists };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst AppStateContext = createContext<AppStateContextProps>({} as AppStateContextProps);\n\nexport const AppStateProvider = ({ children }: React.PropsWithChildren<{}>) => {\n  const [state, dispatch] = useReducer(appStateReducer, appData);\n  return (\n    <AppStateContext.Provider value={{ state, dispatch }}>{children}</AppStateContext.Provider>\n  );\n};\n\nexport const useAppState = () => {\n  return useContext(AppStateContext);\n};\n","export const moveItem = <T>(array: T[], from: number, to: number) => {\n  const startIndex = to < 0 ? array.length + to : to;\n  const item = array.splice(from, 1)[0];\n  array.splice(startIndex, 0, item);\n  return array;\n};\n","import { useDrag } from \"react-dnd\";\nimport { useAppState } from \"../AppStateContext\";\nimport { DragItem } from \"../DragItem\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport { useEffect } from \"react\";\nexport const useItemDrag = (item: DragItem) => {\n  const { dispatch } = useAppState();\n  const [, drag, preview] = useDrag({\n    item,\n    begin: () =>\n      dispatch({\n        type: \"SET_DRAGGED_ITEM\",\n        payload: item,\n      }),\n    end: () => dispatch({ type: \"SET_DRAGGED_ITEM\", payload: undefined }),\n  });\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, [preview]);\n  return { drag };\n};\n","import { DragItem } from \"../DragItem\";\n\nexport const isHidden = (\n  isPreview: boolean | undefined,\n  draggedItem: DragItem | undefined,\n  itemType: string,\n  id: string\n): boolean => {\n  return Boolean(\n    !isPreview && draggedItem && draggedItem.type === itemType && draggedItem.id === id\n  );\n};\n","import React, { useRef } from \"react\";\nimport { CardContainer } from \"./styles\";\nimport { useDrop } from \"react-dnd\";\nimport { CardDragItem } from \"./DragItem\";\nimport { useAppState } from \"./AppStateContext\";\nimport { useItemDrag } from \"./utils/useItemDrag\";\nimport { isHidden } from \"./utils/isHidden\";\ninterface CardProps {\n  text: string;\n  index: number;\n  id: string;\n  columnId: string;\n  isPreview?: boolean;\n}\n\nexport const Card = ({ text, id, index, columnId, isPreview }: CardProps) => {\n  const { state, dispatch } = useAppState();\n  const ref = useRef<HTMLDivElement>(null);\n  const { drag } = useItemDrag({ type: \"CARD\", id, index, text, columnId });\n  const [, drop] = useDrop({\n    accept: \"CARD\",\n    hover(item: CardDragItem) {\n      if (item.id === id) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      const sourceColumn = item.columnId;\n      const targetColumn = columnId;\n\n      dispatch({\n        type: \"MOVE_TASK\",\n        payload: { dragIndex, hoverIndex, sourceColumn, targetColumn },\n      });\n      item.index = hoverIndex;\n      item.columnId = targetColumn;\n    },\n  });\n  drag(drop(ref));\n  return (\n    <CardContainer\n      ref={ref}\n      isHidden={isHidden(isPreview, state.draggedItem, \"CARD\", id)}\n      isPreview={isPreview}\n    >\n      {text}\n    </CardContainer>\n  );\n};\n","import React from \"react\";\nimport { Svg } from \"./styles\";\nimport { useAppState } from \"./AppStateContext\";\n\ninterface TrashIconProps {\n  listId: string;\n}\nexport const TrashIcon = ({ listId }: TrashIconProps) => {\n  const { dispatch } = useAppState();\n  return (\n    <Svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      onClick={() => dispatch({ type: \"DELETE_LIST\", payload: { listId } })}\n    >\n      <title>Trash</title>\n      <path\n        d=\"M112 112l20 320c.95 18.49 14.4 32 32 32h184c17.67 0 30.87-13.51 32-32l20-320\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"32\"\n      />\n      <path\n        className=\"trash_cap\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"32\"\n        d=\"M80 112h352\"\n      />\n      <path\n        className=\"trash_cap\"\n        d=\"M192 112V72h0a23.93 23.93 0 0124-24h80a23.93 23.93 0 0124 24h0v40M256 176v224M184 176l8 224M328 176l-8 224\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"32\"\n      />\n    </Svg>\n  );\n};\n","import React, { useRef } from \"react\";\nimport { AddNewItem } from \"./AddNewItem\";\nimport { ColumnContainer, ColumnTitle } from \"./styles\";\nimport { useAppState } from \"./AppStateContext\";\nimport { Card } from \"./Card\";\nimport { useItemDrag } from \"./utils/useItemDrag\";\nimport { useDrop } from \"react-dnd\";\nimport { DragItem } from \"./DragItem\";\nimport { isHidden } from \"./utils/isHidden\";\nimport { TrashIcon } from \"./TrashIcon\";\ninterface ColumnProps {\n  text: string;\n  index: number;\n  id: string;\n  isPreview?: boolean;\n}\nexport const Column = ({ text, index, id, isPreview }: ColumnProps) => {\n  const { state, dispatch } = useAppState();\n  const [, drop] = useDrop({\n    accept: [\"COLUMN\", \"CARD\"],\n    hover(item: DragItem) {\n      if (item.type === \"COLUMN\") {\n        const dragIndex = item.index;\n        const hoverIndex = index;\n        if (dragIndex === hoverIndex) {\n          return;\n        }\n        dispatch({ type: \"MOVE_LIST\", payload: { dragIndex, hoverIndex } });\n        item.index = hoverIndex;\n      } else {\n        const dragIndex = item.index;\n        const hoverIndex = 0;\n        const sourceColumn = item.columnId;\n        const targetColumn = id;\n        if (sourceColumn === targetColumn) {\n          return;\n        }\n        dispatch({\n          type: \"MOVE_TASK\",\n          payload: { dragIndex, hoverIndex, sourceColumn, targetColumn },\n        });\n        item.index = hoverIndex;\n        item.columnId = targetColumn;\n      }\n    },\n  });\n  const ref = useRef<HTMLDivElement>(null);\n  const { drag } = useItemDrag({ type: \"COLUMN\", id, index, text });\n  drag(drop(ref));\n  return (\n    <ColumnContainer\n      ref={ref}\n      isPreview={isPreview}\n      isHidden={isHidden(isPreview, state.draggedItem, \"COLUMN\", id)}\n    >\n      <ColumnTitle>\n        {text}\n        <TrashIcon listId={id} />\n      </ColumnTitle>\n      {state.lists[index].tasks.map((task, i) => (\n        <Card text={task.text} key={task.id} id={task.id} columnId={id} index={i} />\n      ))}\n      <AddNewItem\n        toggleButtonText=\"+Add another task\"\n        onAdd={(text) => dispatch({ type: \"ADD_TASK\", payload: { text, listId: id } })}\n        dark\n      />\n    </ColumnContainer>\n  );\n};\n","import React from \"react\";\nimport { useDragLayer, XYCoord } from \"react-dnd\";\nimport { Column } from \"./Column\";\nimport { CustomDragLayerContainer } from \"./styles\";\nimport { Card } from \"./Card\";\nexport const CustomDragLayer: React.FC = () => {\n  const { isDragging, item, currentOffset } = useDragLayer((monitor) => ({\n    item: monitor.getItem(),\n    isDragging: monitor.getItem(),\n    currentOffset: monitor.getClientOffset(),\n  }));\n  if (!isDragging) {\n    return null;\n  }\n  return (\n    <CustomDragLayerContainer>\n      <div style={getItemStyles(currentOffset)}>\n        {item.type === \"COLUMN\" ? (\n          <Column id={item.id} text={item.text} index={item.index} isPreview={true} />\n        ) : (\n          <Card columnId={item.columnId} isPreview={true} index={0} id={item.id} text={item.text} />\n        )}\n      </div>\n    </CustomDragLayerContainer>\n  );\n};\n\nfunction getItemStyles(currentOffset: XYCoord | null): React.CSSProperties {\n  if (!currentOffset) {\n    return { display: \"none\" };\n  }\n\n  const { x, y } = currentOffset;\n  const transform = `translate(${x}px,${y}px)`;\n  return {\n    transform,\n    WebkitTransform: transform,\n  };\n}\n","import React from \"react\";\nimport { Column } from \"./Column\";\nimport { AddNewItem } from \"./AddNewItem\";\nimport { AppContainer } from \"./styles\";\nimport { useAppState } from \"./AppStateContext\";\nimport { CustomDragLayer } from \"./CustomDragLayer\";\nfunction App() {\n  const { state, dispatch } = useAppState();\n  return (\n    <AppContainer>\n      <CustomDragLayer />\n      {state.lists.map((list, i) => (\n        <Column id={list.id} text={list.text} key={list.id} index={i} />\n      ))}\n      <AddNewItem\n        toggleButtonText=\"+ Add another list\"\n        onAdd={(text) => dispatch({ type: \"ADD_LIST\", payload: text })}\n      />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend as Backend } from \"react-dnd-html5-backend\";\nimport { AppStateProvider } from \"./AppStateContext\";\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend={Backend}>\n      <AppStateProvider>\n        <App />\n      </AppStateProvider>\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}